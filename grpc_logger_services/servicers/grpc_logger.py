import asyncio
from mongo_db.mongo_db_controller import write_log_to_db
from grpc_logger_pb2_grpc import LogServiceServicer as grpc_LogServiceServicer
from grpc_logger_pb2 import WriteLogResponse, WriteLogRequest, ResponseStatus


class WriteLogServicer(grpc_LogServiceServicer):
    # DO NOT change metod name according to Python conventions !!
    # this function overlload grpc_LogServiceServicer.WriteLog
    # generated by proto compiler thus defining core logic behind write log
    # request from client
    def WriteLog(self, request: WriteLogRequest, context):

        # implicit return value
        status = ResponseStatus.STATUS_OK
        message = "Write log OK"

        try:
            # call DB controller for saving log to Mongo DB
            asyncio.run(write_log_to_db(request))
        except Exception as e:
            message = str(e)
            status = ResponseStatus.STATUS_UNSPECIFIED_ERRO

        return WriteLogResponse(status=status, message=message)
