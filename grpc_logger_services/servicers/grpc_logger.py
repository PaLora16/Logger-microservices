from grpc_logger_pb2_grpc import LogServiceServicer as grpc_LogServiceServicer
from grpc_logger_pb2 import WriteLogResponse, WriteLogRequest, ResponseStatus
from mongo_db.mongo_db_models import LogDbModel
from mongo_db.mongo_db_controller import write_log_to_db
from datetime import datetime


class WriteLogServicer(grpc_LogServiceServicer):
    # DO NOT change metod name according to Python conventions !!
    # this function overlload grpc_LogServiceServicer.WriteLog
    # generated by proto compiler
    def WriteLog(self, request: WriteLogRequest, context):

        # transform request to MOngo db model shape
        model = LogDbModel(request.log.agenda,
                           request.log.level, 
                           request.log.message, 
                           datetime.now())

        # implicit return value
        message = "OK"
        status = ResponseStatus.STATUS_OK

        try:
            # call DB controller for savinf log to Mongo DB
            write_log_to_db(model)
        except Exception as e:
            message = str(e)
            status = ResponseStatus.STATUS_UNSPECIFIED_ERROR

        return WriteLogResponse(status=status, message=message)
